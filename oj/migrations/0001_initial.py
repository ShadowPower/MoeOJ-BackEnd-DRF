# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-10 05:11
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('user_type', models.IntegerField(default=0)),
                ('school', models.CharField(max_length=20, null=True)),
                ('student_id', models.CharField(max_length=26, null=True)),
                ('gender', models.CharField(default='boy', max_length=5)),
                ('email_token', models.CharField(max_length=64, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('body', models.TextField(null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('real_time_rank', models.BooleanField()),
                ('password', models.CharField(blank=True, max_length=30, null=True)),
                ('contest_type', models.IntegerField(default=0)),
                ('visible', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ContestProblem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(null=True)),
                ('input_desc', models.TextField(null=True)),
                ('output_desc', models.TextField(null=True)),
                ('sample_input', models.TextField(null=True)),
                ('sample_output', models.TextField(null=True)),
                ('spj', models.BooleanField(default=False)),
                ('spj_code', models.TextField(null=True)),
                ('supplemental', models.TextField(null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('time_limit', models.IntegerField()),
                ('memory_limit', models.IntegerField()),
                ('is_enable', models.BooleanField(default=True)),
                ('accepted', models.IntegerField(default=0, null=True)),
                ('submit', models.IntegerField(default=0, null=True)),
                ('index', models.CharField(max_length=30)),
                ('is_public', models.BooleanField(default=False)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='oj.Contest')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContestRank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submit', models.IntegerField(default=0)),
                ('accepted', models.IntegerField(default=0)),
                ('total_time', models.IntegerField(default=0)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='oj.Contest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ContestSolution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.IntegerField(default=0)),
                ('memory', models.IntegerField(default=0)),
                ('submit_date', models.DateTimeField(auto_now_add=True)),
                ('judge_time', models.DateTimeField(null=True)),
                ('result', models.SmallIntegerField(null=True)),
                ('ip', models.CharField(max_length=46, null=True)),
                ('code', models.TextField()),
                ('info', models.TextField()),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='oj.Contest')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='oj.ContestProblem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('body', models.TextField(null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(null=True)),
                ('input_desc', models.TextField(null=True)),
                ('output_desc', models.TextField(null=True)),
                ('sample_input', models.TextField(null=True)),
                ('sample_output', models.TextField(null=True)),
                ('spj', models.BooleanField(default=False)),
                ('spj_code', models.TextField(null=True)),
                ('supplemental', models.TextField(null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('time_limit', models.IntegerField()),
                ('memory_limit', models.IntegerField()),
                ('is_enable', models.BooleanField(default=True)),
                ('accepted', models.IntegerField(default=0, null=True)),
                ('submit', models.IntegerField(default=0, null=True)),
                ('source', models.CharField(max_length=30, null=True)),
                ('difficulty', models.IntegerField()),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProblemTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.IntegerField(default=0)),
                ('memory', models.IntegerField(default=0)),
                ('submit_date', models.DateTimeField(auto_now_add=True)),
                ('judge_time', models.DateTimeField(null=True)),
                ('result', models.SmallIntegerField(null=True)),
                ('ip', models.CharField(max_length=46, null=True)),
                ('code', models.TextField()),
                ('info', models.TextField()),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='oj.Problem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='problem',
            name='tags',
            field=models.ManyToManyField(to='oj.ProblemTag'),
        ),
        migrations.AddField(
            model_name='comment',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='oj.Problem'),
        ),
    ]
